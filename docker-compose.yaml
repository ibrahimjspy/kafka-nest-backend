version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
     - 1433:1433 
    environment:
     - ACCEPT_EULA=Y
     - MSSQL_PID=Standard
     - SA_PASSWORD=Password!
     - MSSQL_AGENT_ENABLED=true
  postgres:
    image: quay.io/debezium/postgres:9.6
    ports:
     - "5432:5432"
    environment:
     - POSTGRES_USER=postgresuser
     - POSTGRES_PASSWORD=postgrespw
     - POSTGRES_DB=inventory  
  client:
    ports:
      - 5000:5000
    build:
      context: .
      dockerfile: ./DockerFile
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: npm run start
  # connect:
  #   image:  debezium/connect-jdbc-es:${DEBEZIUM_VERSION}
  #   build:
  #     context: debezium-jdbc-es
  #     args:
  #       DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
  #   ports:
  #    - 8083:8083
  #    - 5005:5005
  #   links:
  #    - kafka
  #    - sqlserver
  #    - postgres
  #   environment:
  #    - BOOTSTRAP_SERVERS=kafka:9092
  #    - GROUP_ID=1
  #    - CONFIG_STORAGE_TOPIC=my_connect_configs
  #    - OFFSET_STORAGE_TOPIC=my_connect_offsets
  #    - STATUS_STORAGE_TOPIC=my_connect_statuses
# For testing newer connector versions, unpack the connector archive into this
# directory and uncomment the lines below
#    volumes:
#     - ./debezium-connector-sqlserver:/kafka/connect/debezium-connector-sqlserver
