/**
 * this function returns a string that could be added to graphql mutation which fetches sku's for product variants
 * @param product variants transformed using product transformer space
 * @param product name
 * @returns string of product variants transformed which could be used for skus generation ;
 */
export const getProductVariantsForSku = (
  productVariantData,
  productName,
): string => {
  const skuProductVariants = [];
  productVariantData.map((variant) => {
    const skuProductVariant = {};
    skuProductVariant['color'] = variant.color;
    skuProductVariant['size'] = variant.size;
    skuProductVariant['name'] = productName;
    skuProductVariants.push(skuProductVariant);
  });
  return JSON.stringify(skuProductVariants)
    .replace(/"name"/g, 'name')
    .replace(/"color"/g, 'color')
    .replace(/"size"/g, 'size');
};

/**
 *  adds sku generated by sku generator service to product transformer object
 */
export const addSkuToProductVariants = (skuArray, productVariantData) => {
  productVariantData.map((variant, key) => {
    variant['sku'] = skuArray[key]['sku'];
  });
};
